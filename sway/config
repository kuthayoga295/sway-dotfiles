### Environtment Variables
set $GDK_BACKEND wayland
set $MOZ_ENABLE_WAYLAND 1
set $XDG_SESSION_TYPE wayland
set $QT_QPA_PLATFORM wayland
set $QT_QPA_PLATFORMTHEME qt6ct
set $OZONE_PLATFORM wayland
set $SDL_VIDEODRIVER wayland
set $XDG_CURRENT_DESKTOP sway
set $XDG_SESSION_DESKTOP sway

set $XCURSOR_SIZE 32
set $XCURSOR_THEME Vimix-cursors

exec_always export GDK_BACKEND=$GDK_BACKEND
exec_always export MOZ_ENABLE_WAYLAND=$MOZ_ENABLE_WAYLAND
exec_always export XDG_SESSION_TYPE=$XDG_SESSION_TYPE
exec_always export QT_QPA_PLATFORM=$QT_QPA_PLATFORM
exec_always export QT_QPA_PLATFORMTHEME=$QT_QPA_PLATFORMTHEME
exec_always export OZONE_PLATFORM=$OZONE_PLATFORM
exec_always export SDL_VIDEODRIVER=$SDL_VIDEODRIVER
exec_always export XDG_CURRENT_DESKTOP=$XDG_CURRENT_DESKTOP
exec_always export XDG_SESSION_DESKTOP=$XDG_SESSION_DESKTOP

exec_always export XCURSOR_SIZE=$XCURSOR_SIZE
exec_always export XCURSOR_THEME=$XCURSOR_THEME

exec_always swaymsg exec xdg-autostart

### Polkit-gnome
exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

### Keyring
exec /usr/bin/gnome-keyring-daemon --start --components=secrets

### NM Applet
exec nm-applet --indicator

### Clipboard
exec wl-paste -t text --watch clipman store --no-persist
exec copyq

### Notification
exec mako

### Bluetooth
exec blueman-applet

### EasyEffects
exec easyeffects --gapplication-service

### Sway Variables
## Logo key. Use Mod1 for Alt.
set $mod Mod1
set $wallpaper /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png
set $font "Noto Sans 9"

## Font
font $font
title_align center

## Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

## Your preferred terminal emulator
set $term xfce4-terminal

## Your preferred application launcher
set $menu wmenu-run

### Output configuration
## Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg $wallpaper fill

## Example configuration:
#output HDMI-A-1 resolution 1920x1080 position 1920,0
#You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
## Example configuration:
exec swayidle -w \
          timeout 900 'swaylock -e -f -i $wallpaper' \
          timeout 910 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
          before-sleep 'swaylock -e -f -i $wallpaper'

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
# Example configuration:
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input type:keyboard xkb_numlock enabled

### Key bindings
# Basics:
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.

    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

# Moving around:
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right

    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right

    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

# Workspaces:
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10

    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1; workspace 1
    bindsym $mod+Shift+2 move container to workspace number 2; workspace 2
    bindsym $mod+Shift+3 move container to workspace number 3; workspace 3
    bindsym $mod+Shift+4 move container to workspace number 4; workspace 4
    bindsym $mod+Shift+5 move container to workspace number 5; workspace 5
    bindsym $mod+Shift+6 move container to workspace number 6; workspace 6
    bindsym $mod+Shift+7 move container to workspace number 7; workspace 7
    bindsym $mod+Shift+8 move container to workspace number 8; workspace 8
    bindsym $mod+Shift+9 move container to workspace number 9; workspace 9
    bindsym $mod+Shift+0 move container to workspace number 10; workspace 10

    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

# Layout stuff:
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

# Scratchpad:
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

# Resizing containers:
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Define Light Color Variables
set $bg-color               #EAEFF2  
set $text-color             #1E1E1E  
set $inactive-bg-color      #C5CBD3  
set $inactive-text-color    #6A737D  
set $urgent-bg-color        #FFDADA  
set $urgent-text-color      #D72638  
set $indicator              #3A7DCC  


# Define Dark Color Variables
#set $bg-color               #1E1E2E  
#set $text-color             #DADADA  
#set $inactive-bg-color      #2E2E3E  
#set $inactive-text-color    #A0A0A0  
#set $urgent-bg-color        #3E1E2E  
#set $urgent-text-color      #FF5E5E  
#set $indicator              #82A4F8  

# class                 border             background         text                 indicator  child_border
client.focused          $bg-color          $bg-color          $text-color          $indicator $bg-color
client.focused_inactive $inactive-bg-color $inactive-bg-color $inactive-text-color $indicator $inactive-bg-color
client.unfocused        $inactive-bg-color $inactive-bg-color $inactive-text-color $indicator $inactive-bg-color
client.urgent           $urgent-bg-color   $urgent-bg-color   $urgent-text-color   $indicator $urgent-bg-color
client.placeholder      #121212            #121212            #F8F8F8              $indicator #121212

client.background       #000000


# Utilities:
    # Special keys to adjust volume via PulseAudio
    #bindsym --locked XF86AudioMute exec pactl set-sink-mute \@DEFAULT_SINK@ toggle
    #bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume \@DEFAULT_SINK@ -5%
    #bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume \@DEFAULT_SINK@ +5%
    #bindsym --locked XF86AudioMicMute exec pactl set-source-mute \@DEFAULT_SOURCE@ toggle

    # Special keys to adjust brightness via brightnessctl
    #bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%-
    #bindsym --locked XF86MonBrightnessUp exec brightnessctl set 5%+

    # Special key to take a screenshot with grim
    #bindsym Print exec grim
#

# Status Bar:
# Read `man 5 sway-bar` for more information about this section.
bar {
    bar swaybar_command waybar

    #position top
    #status_command while date +'%Y-%m-%d | %R'; do sleep 1; done
    #colors {
    #    statusline #ffffff
    #    background #000000
    #    inactive_workspace #32323200 #32323200 #5c5c5c
    #}
}

# Hide window title bar
default_border pixel 2
default_floating_border pixel 2
for_window [class="^.*"] border pixel 2

# Configure px of space between windows and to the screen edges.
gaps inner 4px

# Hide border when 1 app
smart_borders on
hide_edge_borders smart_no_gaps
smart_gaps on

# Focus on hover
focus_follows_mouse no

# Focus behaviour
focus_on_window_activation focus

# Enable floating mode for specific application
for_window [window_role="pop-up"] floating enable
for_window [window_role="bubble"] floating enable
for_window [window_role="task_dialog"] floating enable
for_window [window_role="Preferences"] floating enable
for_window [window_type="dialog"] floating enable
for_window [window_type="menu"] floating enable
for_window [window_role="About"] floating enable
for_window [class="xdg-desktop-portal-gtk"] floating enable
for_window [class="XTerm"] floating enable
for_window [class="Webapp-manager.py"] floating enable
for_window [class="Xdm-app"] floating enable
for_window [class="Free Download Manager"] floating enable
for_window [class="Nm-connection-editor"] floating enable
for_window [class="4K Video Downloader"] floating enable
for_window [class="Eog"] floating enable
for_window [class="vlc"] floating enable
for_window [class="Blueman-manager"] floating enable

# Popups during fullscreen mode
popup_during_fullscreen smart

# Make the currently focused window a scratchpad
#bindsym $mod+minus move scratchpad

# Show the first scratchpad window
#bindsym $mod+equal scratchpad show

# switch between the current and the previously focused one
bindsym Ctrl+$mod+Right workspace next_on_output
bindsym Ctrl+$mod+Left workspace prev_on_output
bindsym Ctrl+$mod+Up move container to workspace next
bindsym Ctrl+$mod+Down move container to workspace prev
bindsym $mod+slash workspace back_and_forth
bindsym Shift+$mod+slash move container to workspace back_and_forth
bindsym $mod+z workspace next_on_output
bindsym Shift+$mod+z move container to workspace next
bindsym Shift+$mod+comma move container to workspace next; workspace next
bindsym Shift+$mod+period move container to workspace prev; workspace prev

# Pipewire and Wireplumber
bindsym XF86AudioRaiseVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+
bindsym XF86AudioLowerVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
bindsym XF86AudioMute exec wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindsym XF86AudioMicMute exec wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle

# Sreen brightness controls
exec brightnessctl set 50%
bindsym XF86MonBrightnessUp exec brightnessctl set +5%
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym $mod+XF86MonBrightnessUp exec brightnessctl set 50%
bindsym $mod+XF86MonBrightnessDown exec brightnessctl set 5%

# Rofi
bindsym $mod+m exec rofi -show run
bindsym $mod+n exec rofi -show filebrowser -show-icons -icon-theme "Papirus-Light"
bindsym $mod+x exec rofi -show drun -show-icons -icon-theme "Papirus-Light"
bindsym Super_L exec rofi -show drun -show-icons -icon-theme "Papirus-Light"

# Keybinding to lock screen
bindsym Control+$mod+l exec swaylock -e -f -i $wallpaper

# Screenshot layar penuh + Notifikasi
bindsym Print exec grim ~/Pictures/screenshot-$(date +'%Y%m%d-%H%M%S').png && notify-send "Screenshot saved!"

# Screenshot area tertentu + Notifikasi
bindsym Shift+Print exec grim -g "$(slurp)" ~/Pictures/screenshot-$(date +'%Y%m%d-%H%M%S').png && notify-send "Screenshot saved!"

# Screenshot area tertentu + Copy ke clipboard + Notifikasi
bindsym Ctrl+Shift+Print exec grim -g "$(slurp)" - | wl-copy && notify-send "Screenshot copied to clipboard!"

# Record
bindsym $mod+Shift+o exec ~/.config/waybar/toggle-screen-recorder.sh

### Wallpaper
exec_always waypaper --restore

include /etc/sway/config.d/*
